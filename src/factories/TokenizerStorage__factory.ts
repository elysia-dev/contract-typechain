/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { TokenizerStorage } from "../TokenizerStorage";

export class TokenizerStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TokenizerStorage> {
    return super.deploy(overrides || {}) as Promise<TokenizerStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenizerStorage {
    return super.attach(address) as TokenizerStorage;
  }
  connect(signer: Signer): TokenizerStorage__factory {
    return super.connect(signer) as TokenizerStorage__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenizerStorage {
    return new Contract(address, _abi, signerOrProvider) as TokenizerStorage;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0x742e147a",
        type: "bytes32",
      },
    ],
    name: "c_0x742e147a",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060988061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80637b1b5bad14602d575b600080fd5b60436004803603810190603f91906048565b6045565b005b50565b6000602082840312156058578081fd5b813590509291505056fea2646970667358221220c4c0bfcdd931f4f7d1de664e4b66b9bf6a9e6001d97e02b7724532b92f1744aa64736f6c63430008030033";
