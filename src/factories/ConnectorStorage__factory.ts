/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ConnectorStorage } from "../ConnectorStorage";

export class ConnectorStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ConnectorStorage> {
    return super.deploy(overrides || {}) as Promise<ConnectorStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ConnectorStorage {
    return super.attach(address) as ConnectorStorage;
  }
  connect(signer: Signer): ConnectorStorage__factory {
    return super.connect(signer) as ConnectorStorage__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ConnectorStorage {
    return new Contract(address, _abi, signerOrProvider) as ConnectorStorage;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "c__0xa2710756",
        type: "bytes32",
      },
    ],
    name: "c_0xa2710756",
    outputs: [],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060988061001e6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063cadf54b214602d575b600080fd5b60436004803603810190603f91906048565b6045565b005b50565b6000602082840312156058578081fd5b813590509291505056fea264697066735822122060e988a5465d33d2f604e199f218b63f8104bbcb5d54eaa982aa7ef15415817364736f6c63430008030033";
