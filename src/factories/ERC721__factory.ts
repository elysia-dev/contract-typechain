/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { ERC721 } from "../ERC721";

export class ERC721__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ERC721> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<ERC721>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): ERC721 {
    return super.attach(address) as ERC721;
  }
  connect(signer: Signer): ERC721__factory {
    return super.connect(signer) as ERC721__factory;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERC721 {
    return new Contract(address, _abi, signerOrProvider) as ERC721;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200147f3803806200147f8339810160408190526200003491620001c1565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b600181811c908216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b6111f4806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806301ffc9a7146100b457806306fdde03146100dc578063081812fc146100f1578063095ea7b31461011c57806323b872dd1461013157806342842e0e146101445780636352211e1461015757806370a082311461016a57806395d89b411461018b578063a22cb46514610193578063b88d4fde146101a6578063c87b56dd146101b9578063e985e9c5146101cc575b600080fd5b6100c76100c2366004610eec565b6101df565b60405190151581526020015b60405180910390f35b6100e4610233565b6040516100d39190610fd4565b6101046100ff366004610f24565b6102c5565b6040516001600160a01b0390911681526020016100d3565b61012f61012a366004610ec3565b610352565b005b61012f61013f366004610d7a565b610463565b61012f610152366004610d7a565b610494565b610104610165366004610f24565b6104af565b61017d610178366004610d2e565b610526565b6040519081526020016100d3565b6100e46105ad565b61012f6101a1366004610e89565b6105bc565b61012f6101b4366004610db5565b61068a565b6100e46101c7366004610f24565b6106c2565b6100c76101da366004610d48565b61079a565b60006001600160e01b031982166380ac58cd60e01b148061021057506001600160e01b03198216635b5e139f60e01b145b8061022b57506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b606060008054610242906110f9565b80601f016020809104026020016040519081016040528092919081815260200182805461026e906110f9565b80156102bb5780601f10610290576101008083540402835291602001916102bb565b820191906000526020600020905b81548152906001019060200180831161029e57829003601f168201915b5050505050905090565b60006102d0826107c8565b6103365760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061035d826104af565b9050806001600160a01b0316836001600160a01b031614156103cb5760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b606482015260840161032d565b336001600160a01b03821614806103e757506103e781336101da565b6104545760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776044820152771b995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60421b606482015260840161032d565b61045e83836107e5565b505050565b61046d3382610853565b6104895760405162461bcd60e51b815260040161032d90611039565b61045e83838361091d565b61045e8383836040518060200160405280600081525061068a565b6000818152600260205260408120546001600160a01b03168061022b5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b606482015260840161032d565b60006001600160a01b0382166105915760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b606482015260840161032d565b506001600160a01b031660009081526003602052604090205490565b606060018054610242906110f9565b6001600160a01b0382163314156106115760405162461bcd60e51b815260206004820152601960248201527822a9219b99189d1030b8383937bb32903a379031b0b63632b960391b604482015260640161032d565b3360008181526005602090815260408083206001600160a01b0387168085529252909120805460ff1916841515179055906001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161067e911515815260200190565b60405180910390a35050565b6106943383610853565b6106b05760405162461bcd60e51b815260040161032d90611039565b6106bc84848484610abd565b50505050565b60606106cd826107c8565b6107315760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161032d565b600061074860408051602081019091526000815290565b905060008151116107685760405180602001604052806000815250610793565b8061077284610af0565b604051602001610783929190610f68565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061081a826104af565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061085e826107c8565b6108bf5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b606482015260840161032d565b60006108ca836104af565b9050806001600160a01b0316846001600160a01b031614806109055750836001600160a01b03166108fa846102c5565b6001600160a01b0316145b806109155750610915818561079a565b949350505050565b826001600160a01b0316610930826104af565b6001600160a01b0316146109985760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b606482015260840161032d565b6001600160a01b0382166109fa5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161032d565b610a056000826107e5565b6001600160a01b0383166000908152600360205260408120805460019290610a2e9084906110b6565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a5c90849061108a565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610ac884848461091d565b610ad484848484610c0a565b6106bc5760405162461bcd60e51b815260040161032d90610fe7565b606081610b1557506040805180820190915260018152600360fc1b602082015261022e565b8160005b8115610b3f5780610b2981611134565b9150610b389050600a836110a2565b9150610b19565b6000816001600160401b03811115610b6757634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015610b91576020820181803683370190505b5090505b841561091557610ba66001836110b6565b9150610bb3600a8661114f565b610bbe90603061108a565b60f81b818381518110610be157634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a905350610c03600a866110a2565b9450610b95565b60006001600160a01b0384163b15610d0c57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c4e903390899088908890600401610f97565b602060405180830381600087803b158015610c6857600080fd5b505af1925050508015610c98575060408051601f3d908101601f19168201909252610c9591810190610f08565b60015b610cf2573d808015610cc6576040519150601f19603f3d011682016040523d82523d6000602084013e610ccb565b606091505b508051610cea5760405162461bcd60e51b815260040161032d90610fe7565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610915565b506001949350505050565b80356001600160a01b038116811461022e57600080fd5b600060208284031215610d3f578081fd5b61079382610d17565b60008060408385031215610d5a578081fd5b610d6383610d17565b9150610d7160208401610d17565b90509250929050565b600080600060608486031215610d8e578081fd5b610d9784610d17565b9250610da560208501610d17565b9150604084013590509250925092565b60008060008060808587031215610dca578081fd5b610dd385610d17565b9350610de160208601610d17565b92506040850135915060608501356001600160401b0380821115610e03578283fd5b818701915087601f830112610e16578283fd5b813581811115610e2857610e2861118f565b604051601f8201601f19908116603f01168101908382118183101715610e5057610e5061118f565b816040528281528a6020848701011115610e68578586fd5b82602086016020830137918201602001949094529598949750929550505050565b60008060408385031215610e9b578182fd5b610ea483610d17565b915060208301358015158114610eb8578182fd5b809150509250929050565b60008060408385031215610ed5578182fd5b610ede83610d17565b946020939093013593505050565b600060208284031215610efd578081fd5b8135610793816111a5565b600060208284031215610f19578081fd5b8151610793816111a5565b600060208284031215610f35578081fd5b5035919050565b60008151808452610f548160208601602086016110cd565b601f01601f19169290920160200192915050565b60008351610f7a8184602088016110cd565b835190830190610f8e8183602088016110cd565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610fca90830184610f3c565b9695505050505050565b6000602082526107936020830184610f3c565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b6000821982111561109d5761109d611163565b500190565b6000826110b1576110b1611179565b500490565b6000828210156110c8576110c8611163565b500390565b60005b838110156110e85781810151838201526020016110d0565b838111156106bc5750506000910152565b600181811c9082168061110d57607f821691505b6020821081141561112e57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561114857611148611163565b5060010190565b60008261115e5761115e611179565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146111bb57600080fd5b5056fea2646970667358221220540665c7175b32b5377fa3cdec12cc5bb90a968c638e6273bf723de5ad73cd1a64736f6c63430008030033";
