/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IIncentivePool,
  IIncentivePoolInterface,
} from "../IIncentivePool";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimedIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "userIncentiveIndex",
        type: "uint256",
      },
    ],
    name: "ClaimIncentive",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [],
    name: "IncentivePoolEnded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "accruedIncentive",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "incentiveIndex",
        type: "uint256",
      },
    ],
    name: "UpdateIncentivePool",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "beforeTokenTransfer",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimIncentive",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "lToken",
        type: "address",
      },
    ],
    name: "initializeIncentivePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "updateIncentivePool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawResidue",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IIncentivePool__factory {
  static readonly abi = _abi;
  static createInterface(): IIncentivePoolInterface {
    return new utils.Interface(_abi) as IIncentivePoolInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IIncentivePool {
    return new Contract(address, _abi, signerOrProvider) as IIncentivePool;
  }
}
