/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Connector, ConnectorInterface } from "../Connector";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "CollateralServiceProviderRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "CouncilRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "NewCollateralServiceProviderAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "NewCouncilAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addCollateralServiceProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addCouncil",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isCollateralServiceProvider",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isCouncil",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isMoneyPoolAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeCollateralServiceProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeCouncil",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b610071565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b610634806100806000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c806322aa8e7d146100935780632b0f90c0146100a85780632bac1c55146100bb5780633f8d65f2146100ce578063715018a6146100f65780638da5cb5b146100fe5780639aa360ec1461011e578063c60288ab14610131578063f2770bf014610144578063f2fde38b14610157575b600080fd5b6100a66100a136600461057b565b61016a565b005b6100a66100b636600461057b565b6101ed565b6100a66100c936600461057b565b610267565b6100e16100dc36600461057b565b6102e5565b60405190151581526020015b60405180910390f35b6100a6610305565b610106610340565b6040516001600160a01b0390911681526020016100ed565b6100e161012c36600461057b565b61034f565b6100a661013f36600461057b565b610365565b6100e161015236600461057b565b6103e3565b6100a661016536600461057b565b610407565b33610173610340565b6001600160a01b0316146101a25760405162461bcd60e51b8152600401610199906105a9565b60405180910390fd5b6101b66610d3d55390d25360ca1b826104a7565b6040516001600160a01b038216907f94b301526e028aec5a50c07590d098bdf8483f32485a8b8bba723955763063d590600090a250565b336101f6610340565b6001600160a01b03161461021c5760405162461bcd60e51b8152600401610199906105a9565b6102306610d3d55390d25360ca1b826104d5565b6040516001600160a01b038216907feb68cd3369a51fe9f5bc81762f144b8021f7b211fca65d0a0bb689407354a95690600090a250565b33610270610340565b6001600160a01b0316146102965760405162461bcd60e51b8152600401610199906105a9565b6102ae6000805160206105df833981519152826104a7565b6040516001600160a01b038216907f890180e7c1b13ee272f812ff06c5bca5ffff5588bb97c5650754f9e6eaec194b90600090a250565b60006102ff6000805160206105df83398151915283610500565b92915050565b3361030e610340565b6001600160a01b0316146103345760405162461bcd60e51b8152600401610199906105a9565b61033e6000610529565b565b6002546001600160a01b031690565b60006102ff6610d3d55390d25360ca1b83610500565b3361036e610340565b6001600160a01b0316146103945760405162461bcd60e51b8152600401610199906105a9565b6103ac6000805160206105df833981519152826104d5565b6040516001600160a01b038216907fbfc39f8a0326a282cdf9a0a6495a1efc731ee34e232f69ef5dc4669485cd889f90600090a250565b6000816001600160a01b03166103f7610340565b6001600160a01b03161492915050565b33610410610340565b6001600160a01b0316146104365760405162461bcd60e51b8152600401610199906105a9565b6001600160a01b03811661049b5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610199565b6104a481610529565b50565b6000918252602082815260408084206001600160a01b0390931684529190529020805460ff19166001179055565b6000918252602082815260408084206001600160a01b0390931684529190529020805460ff19169055565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b600280546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60006020828403121561058c578081fd5b81356001600160a01b03811681146105a2578182fd5b9392505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260408201526060019056fe436f6c6c61746572616c5365727669636550726f766964657200000000000000a2646970667358221220a2197bc2255763591c079de7d42b7d9009130b062ed8bb21756def956645835764736f6c63430008030033";

type ConnectorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ConnectorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Connector__factory extends ContractFactory {
  constructor(...args: ConnectorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Connector> {
    return super.deploy(overrides || {}) as Promise<Connector>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Connector {
    return super.attach(address) as Connector;
  }
  connect(signer: Signer): Connector__factory {
    return super.connect(signer) as Connector__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ConnectorInterface {
    return new utils.Interface(_abi) as ConnectorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Connector {
    return new Contract(address, _abi, signerOrProvider) as Connector;
  }
}
